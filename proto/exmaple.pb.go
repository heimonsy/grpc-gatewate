// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exmaple.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Command_Type int32

const (
	Command_PING  Command_Type = 0
	Command_SYNC  Command_Type = 1
	Command_CLOSE Command_Type = 99
)

var Command_Type_name = map[int32]string{
	0:  "PING",
	1:  "SYNC",
	99: "CLOSE",
}

var Command_Type_value = map[string]int32{
	"PING":  0,
	"SYNC":  1,
	"CLOSE": 99,
}

func (x Command_Type) String() string {
	return proto.EnumName(Command_Type_name, int32(x))
}

func (Command_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aed5b30e53f3e7e4, []int{2, 0}
}

type AddRequest struct {
	A                    int32    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int32    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aed5b30e53f3e7e4, []int{0}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *AddRequest) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type AddResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aed5b30e53f3e7e4, []int{1}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type Command struct {
	Type                 Command_Type `protobuf:"varint,1,opt,name=type,proto3,enum=heimonsy.grpc.Command_Type" json:"type,omitempty"`
	Id                   int32        `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_aed5b30e53f3e7e4, []int{2}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetType() Command_Type {
	if m != nil {
		return m.Type
	}
	return Command_PING
}

func (m *Command) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CommandResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aed5b30e53f3e7e4, []int{3}
}

func (m *CommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandResponse.Unmarshal(m, b)
}
func (m *CommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandResponse.Marshal(b, m, deterministic)
}
func (m *CommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResponse.Merge(m, src)
}
func (m *CommandResponse) XXX_Size() int {
	return xxx_messageInfo_CommandResponse.Size(m)
}
func (m *CommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResponse proto.InternalMessageInfo

func (m *CommandResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterEnum("heimonsy.grpc.Command_Type", Command_Type_name, Command_Type_value)
	proto.RegisterType((*AddRequest)(nil), "heimonsy.grpc.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "heimonsy.grpc.AddResponse")
	proto.RegisterType((*Command)(nil), "heimonsy.grpc.Command")
	proto.RegisterType((*CommandResponse)(nil), "heimonsy.grpc.CommandResponse")
}

func init() { proto.RegisterFile("exmaple.proto", fileDescriptor_aed5b30e53f3e7e4) }

var fileDescriptor_aed5b30e53f3e7e4 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x4d, 0xf7, 0x4f, 0x8f, 0x6e, 0x8e, 0x5c, 0x8c, 0x39, 0x41, 0xb4, 0x30, 0x18, 0xc2,
	0x52, 0x99, 0x5e, 0x7a, 0x33, 0xcb, 0x10, 0x41, 0xe6, 0xe8, 0xbc, 0xd1, 0xbb, 0xb4, 0x39, 0x6c,
	0x85, 0xa5, 0xc9, 0xd6, 0x0c, 0xd7, 0x97, 0xf0, 0x21, 0x7c, 0x52, 0x69, 0x97, 0x29, 0xca, 0xee,
	0xf2, 0xe5, 0x7c, 0xe7, 0x77, 0xce, 0x97, 0x40, 0x1d, 0x37, 0x92, 0xeb, 0x05, 0x32, 0xbd, 0x52,
	0x46, 0xd1, 0xfa, 0x1c, 0x63, 0xa9, 0x92, 0x34, 0x63, 0xb3, 0x95, 0x8e, 0xdc, 0x1e, 0xc0, 0x50,
	0x88, 0x00, 0x97, 0x6b, 0x4c, 0x0d, 0x3d, 0x01, 0xc2, 0xdb, 0xe4, 0x92, 0xf4, 0x2a, 0x01, 0xe1,
	0xb9, 0x0a, 0xdb, 0xce, 0x56, 0x85, 0x6e, 0x17, 0x8e, 0x0b, 0x67, 0xaa, 0x55, 0x92, 0x22, 0x6d,
	0x41, 0x75, 0x85, 0xe9, 0x7a, 0x61, 0xac, 0xdf, 0x2a, 0x77, 0x09, 0x35, 0x5f, 0x49, 0xc9, 0x13,
	0x41, 0x3d, 0x28, 0x9b, 0x4c, 0x63, 0x61, 0x68, 0x0c, 0xce, 0xd9, 0x9f, 0xc9, 0xcc, 0xba, 0xd8,
	0x6b, 0xa6, 0x31, 0x28, 0x8c, 0xb4, 0x01, 0x4e, 0x2c, 0xec, 0x44, 0x27, 0x16, 0x6e, 0x17, 0xca,
	0x79, 0x95, 0x1e, 0x42, 0x79, 0xf2, 0x34, 0x7e, 0x6c, 0x1e, 0xe4, 0xa7, 0xe9, 0xdb, 0xd8, 0x6f,
	0x12, 0x7a, 0x04, 0x15, 0xff, 0xf9, 0x65, 0x3a, 0x6a, 0x46, 0xee, 0x15, 0x9c, 0x5a, 0xd8, 0xcf,
	0x76, 0x5b, 0x12, 0xd9, 0x91, 0x06, 0x9f, 0x04, 0x6a, 0xa3, 0x0d, 0x97, 0x7a, 0x81, 0xf4, 0x1e,
	0x4a, 0x43, 0x21, 0xe8, 0xd9, 0xbf, 0x7d, 0x7e, 0x9f, 0xa1, 0xd3, 0xd9, 0x57, 0xb2, 0xe4, 0x51,
	0x9e, 0x2f, 0x49, 0x30, 0x32, 0xb4, 0xb5, 0x3f, 0x51, 0xe7, 0x62, 0xff, 0xfd, 0x0e, 0xd1, 0x23,
	0x37, 0xe4, 0xe1, 0x6e, 0x42, 0xde, 0xaf, 0x67, 0xb1, 0x99, 0xaf, 0x43, 0x16, 0x29, 0xe9, 0xed,
	0x3a, 0xbc, 0xbc, 0xa3, 0xcf, 0x75, 0xdc, 0x9f, 0x71, 0x83, 0x1f, 0x3c, 0xf3, 0x8a, 0x6f, 0xfb,
	0x72, 0x4a, 0xc1, 0xc4, 0x0f, 0xab, 0x85, 0xb8, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x27,
	0x49, 0x9d, 0xd4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExampleClient is the client API for Example service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExampleClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Connect(ctx context.Context, opts ...grpc.CallOption) (Example_ConnectClient, error)
}

type exampleClient struct {
	cc *grpc.ClientConn
}

func NewExampleClient(cc *grpc.ClientConn) ExampleClient {
	return &exampleClient{cc}
}

func (c *exampleClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/heimonsy.grpc.Example/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleClient) Connect(ctx context.Context, opts ...grpc.CallOption) (Example_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Example_serviceDesc.Streams[0], "/heimonsy.grpc.Example/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &exampleConnectClient{stream}
	return x, nil
}

type Example_ConnectClient interface {
	Send(*Command) error
	Recv() (*CommandResponse, error)
	grpc.ClientStream
}

type exampleConnectClient struct {
	grpc.ClientStream
}

func (x *exampleConnectClient) Send(m *Command) error {
	return x.ClientStream.SendMsg(m)
}

func (x *exampleConnectClient) Recv() (*CommandResponse, error) {
	m := new(CommandResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExampleServer is the server API for Example service.
type ExampleServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Connect(Example_ConnectServer) error
}

// UnimplementedExampleServer can be embedded to have forward compatible implementations.
type UnimplementedExampleServer struct {
}

func (*UnimplementedExampleServer) Add(ctx context.Context, req *AddRequest) (*AddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedExampleServer) Connect(srv Example_ConnectServer) error {
	return status.Errorf(codes.Unimplemented, "method Connect not implemented")
}

func RegisterExampleServer(s *grpc.Server, srv ExampleServer) {
	s.RegisterService(&_Example_serviceDesc, srv)
}

func _Example_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimonsy.grpc.Example/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Example_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExampleServer).Connect(&exampleConnectServer{stream})
}

type Example_ConnectServer interface {
	Send(*CommandResponse) error
	Recv() (*Command, error)
	grpc.ServerStream
}

type exampleConnectServer struct {
	grpc.ServerStream
}

func (x *exampleConnectServer) Send(m *CommandResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *exampleConnectServer) Recv() (*Command, error) {
	m := new(Command)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Example_serviceDesc = grpc.ServiceDesc{
	ServiceName: "heimonsy.grpc.Example",
	HandlerType: (*ExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Example_Add_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _Example_Connect_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "exmaple.proto",
}
